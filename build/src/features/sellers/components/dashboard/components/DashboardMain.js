import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { filter } from 'lodash';
import { Fragment, useState } from 'react';
import { FaMapMarkerAlt, FaRegClock, FaUserAlt } from 'react-icons/fa';
import { useOutletContext } from 'react-router-dom';
import StickyBox from 'react-sticky-box';
import GigCardItem from 'src/shared/gigs/GigCardItem';
import StarRating from 'src/shared/rating/StarRating';
import { TimeAgo } from 'src/shared/utils/timeago.util';
import { rating, sellerOrderList } from 'src/shared/utils/util.service';
import { v4 as uuidv4 } from 'uuid';
import ActiveOrderTable from './ActiveOrderTable';
const DashboardMain = () => {
    const [type, setType] = useState('active');
    const { gigs, pausedGigs, orders, seller } = useOutletContext();
    const activeGigs = filter(gigs, (gig) => gig.active === true);
    return (_jsxs("div", { className: "flex flex-wrap gap-x-4", children: [_jsx("div", { className: "order-firsts w-full py-4 xl:w-1/3", children: _jsx(StickyBox, { offsetTop: 20, offsetBottom: 20, children: _jsxs("div", { className: "border-grey border bg-white py-2", children: [_jsxs("div", { className: "flex flex-col gap-y-3 pt-2", children: [_jsx("img", { className: "flex h-20 w-20 self-center rounded-full object-cover md:h-24 md:w-24 lg:h-28 lg:w-28", src: seller?.profilePicture, alt: "Seller image" }), _jsxs("div", { className: "flex flex-col self-center", children: [_jsx("div", { className: "flex cursor-pointer self-center", children: _jsx("span", { className: "text-base font-bold", children: seller?.username }) }), _jsx("span", { className: "flex self-center px-4 text-center text-xs md:text-sm", children: seller?.oneliner }), seller?.ratingSum && seller?.ratingsCount ? (_jsxs("div", { className: "flex w-full justify-center gap-x-1 self-center", children: [_jsx("div", { className: "mt-1 w-20 gap-x-2", children: _jsx(StarRating, { value: rating(seller?.ratingSum / seller?.ratingsCount), size: 14 }) }), _jsxs("div", { className: "ml-2 mt-[2px] flex gap-1 text-sm", children: [_jsx("span", { className: "text-orange-400", children: rating(seller?.ratingSum / seller?.ratingsCount) }), _jsx("span", { children: seller?.ratingsCount })] })] })) : (_jsx(_Fragment, {}))] })] }), _jsx("div", { className: "border-grey mb-2 mt-3 border-b" }), _jsxs("ul", { className: "mb-0 list-none px-2 pt-1.5", children: [_jsxs("li", { className: "mb-4 flex flex-col justify-between text-xs sm:mb-2 sm:flex-row sm:text-sm", children: [_jsxs("div", { className: "col-span-3 ml-3 flex pb-0 sm:pb-3", children: [_jsx(FaMapMarkerAlt, { className: "mr-2 mt-1" }), _jsx("div", { className: "mr-3", children: "From" })] }), _jsx("div", { className: "ml-8 mr-4 font-bold sm:ml-0", children: seller?.country })] }), _jsxs("li", { className: "mb-4 flex flex-col justify-between text-xs sm:mb-2 sm:flex-row sm:text-sm", children: [_jsxs("div", { className: "col-span-3 ml-3 flex pb-0 sm:pb-3", children: [_jsx(FaUserAlt, { className: "mr-2 mt-1" }), _jsx("div", { className: "mr-3", children: "Member since" })] }), _jsx("div", { className: "ml-8 mr-4 font-bold sm:ml-0", children: TimeAgo.formatDateToMonthAndYear(`${seller?.createdAt || new Date()}`) })] }), _jsxs("li", { className: "mb-4 flex flex-col justify-between text-xs sm:mb-2 sm:flex-row sm:text-sm", children: [_jsxs("div", { className: "col-span-3 ml-3 flex pb-0 sm:pb-3", children: [_jsx(FaRegClock, { className: "mr-2 mt-1" }), _jsx("div", { className: "mr-3", children: "Avg. Response Time" })] }), _jsxs("div", { className: "ml-8 mr-4 font-bold sm:ml-0", children: [seller?.responseTime, " hour", seller?.responseTime === 1 ? '' : 's'] })] }), _jsxs("li", { className: "mb-4 flex flex-col justify-between text-xs sm:mb-2 sm:flex-row sm:text-sm", children: [_jsxs("div", { className: "col-span-3 ml-3 flex pb-0 sm:pb-3", children: [_jsx(FaRegClock, { className: "mr-2 mt-1" }), _jsx("div", { className: "mr-3", children: "Last Delivery" })] }), _jsx("div", { className: "ml-8 mr-4 font-bold sm:ml-0", children: TimeAgo.dateInDays(`${seller?.recentDelivery}`) })] })] })] }) }) }), _jsxs("div", { className: "w-full py-4 xl:w-[65%]", children: [_jsx("div", { className: "border-grey border bg-white", children: _jsxs("ul", { className: "flex w-full cursor-pointer list-none flex-col px-6 md:flex-row", children: [_jsx("li", { onClick: () => setType('active'), className: `mr-9 w-full py-3 text-xs font-bold md:w-auto md:py-5 md:text-sm ${type === 'active' ? 'text-sky-500 md:border-b-2 md:border-sky-500' : ''}`, children: "ACTIVE GIGS" }), _jsx("li", { onClick: () => setType('paused'), className: `mr-9 w-full py-3 text-xs font-bold md:w-auto md:py-5 md:text-sm ${type === 'paused' ? 'text-sky-500 md:border-b-2 md:border-sky-500' : ''}`, children: "PAUSED" }), _jsx("li", { onClick: () => setType('orders'), className: `mr-9 w-full py-3 text-xs font-bold md:w-auto md:py-5 md:text-sm ${type === 'orders' ? 'text-sky-500 md:border-b-2 md:border-sky-500' : ''}`, children: "ACTIVE ORDERS" })] }) }), _jsxs("div", { className: "my-3", children: [type === 'active' && (_jsx("div", { className: "grid gap-x-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4", children: activeGigs.map((gig) => (_jsx(Fragment, { children: _jsx(GigCardItem, { gig: gig }) }, uuidv4()))) })), type === 'paused' && (_jsx("div", { className: "grid gap-x-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4", children: pausedGigs.map((gig) => (_jsx(Fragment, { children: _jsx(GigCardItem, { gig: gig }) }, uuidv4()))) })), type === 'orders' && _jsx(ActiveOrderTable, { activeOrders: sellerOrderList('in progress', orders) })] })] })] }));
};
export default DashboardMain;
