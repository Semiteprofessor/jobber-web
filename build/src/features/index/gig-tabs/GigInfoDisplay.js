import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Suspense, useRef, useState } from 'react';
import { FaArrowRight, FaCircleNotch, FaRegClock } from 'react-icons/fa';
import { useParams } from 'react-router-dom';
import StickyBox from 'react-sticky-box';
import RegisterModal from 'src/features/auth/components/Register';
import { useGetAuthGigByIdQuery } from 'src/features/auth/services/auth.service';
import Button from 'src/shared/button/Button';
import Header from 'src/shared/header/components/Header';
import HtmlParser from 'src/shared/html-parser/HtmlParser';
import CircularPageLoader from 'src/shared/page-loader/CircularPageLoader';
import StarRating from 'src/shared/rating/StarRating';
import { emptyGigData } from 'src/shared/utils/static-data';
import { rating, shortenLargeNumbers } from 'src/shared/utils/util.service';
import { v4 as uuidv4 } from 'uuid';
const GigInfoDisplay = () => {
    const [showRegisterModal, setShowRegisterModal] = useState(false);
    const { gigId } = useParams();
    const { data, isSuccess, isLoading } = useGetAuthGigByIdQuery(`${gigId}`);
    const gig = useRef(emptyGigData);
    if (isSuccess) {
        gig.current = data.gig;
    }
    return (_jsxs(_Fragment, { children: [showRegisterModal && (_jsx(Suspense, { children: _jsx(RegisterModal, { onClose: () => setShowRegisterModal(false), onToggle: () => {
                        setShowRegisterModal(false);
                    } }) })), _jsxs("div", { className: "flex w-screen flex-col", children: [_jsx(Header, { navClass: "navbar peer-checked:navbar-active relative z-20 w-full border-b border-gray-100 bg-white/90 shadow-2xl shadow-gray-600/5 backdrop-blur dark:border-gray-800 dark:bg-gray-900/80 dark:shadow-none" }), isLoading ? (_jsx(CircularPageLoader, {})) : (_jsx("div", { className: "relative m-auto mt-8 min-h-screen w-screen px-6 xl:container md:px-12 lg:px-6", children: _jsxs("main", { className: "max-w-8xl container mx-auto mt-8", children: [_jsx("h2", { className: "mb-4 px-4 text-xl font-bold text-[#404145] lg:text-3xl", children: gig.current.title }), _jsxs("div", { className: "mb-4 flex flex-row gap-x-2 px-4", children: [_jsx("img", { className: "flex h-8 w-8 self-center rounded-full object-cover", src: gig.current.profilePicture, alt: "" }), _jsx("span", { className: "flex self-center font-extrabold", children: gig.current.username }), gig.current.ratingSum && gig.current.ratingsCount && gig.current.ratingSum >= 1 && gig.current.ratingsCount >= 1 ? (_jsxs(_Fragment, { children: [_jsx("span", { className: "flex self-center", children: "|" }), _jsxs("div", { className: "flex w-full gap-x-1 self-center", children: [_jsx("div", { className: "mt-1 w-20 gap-x-2", children: _jsx(StarRating, { value: rating(gig.current.ratingSum / gig.current.ratingsCount), size: 14 }) }), _jsxs("div", { className: "ml-2 mt-[2px] flex gap-1 text-sm", children: [_jsx("span", { className: "text-orange-400", children: rating(gig.current.ratingSum / gig.current.ratingsCount) }), _jsxs("span", { className: "", children: ["(", shortenLargeNumbers(gig.current.ratingsCount), ")"] })] })] })] })) : (_jsx(_Fragment, {}))] }), _jsxs("div", { className: "flex flex-wrap", children: [_jsxs("div", { className: "order-last flex w-full flex-col p-4 lg:order-first lg:w-2/3", children: [_jsxs("div", { className: "relative flex max-h-[600px] cursor-pointer justify-center bg-[#F5F5F5]", children: [!isLoading && isSuccess && (_jsx("img", { src: gig.current.coverImage, alt: "Gig Image", className: "object-contains h-full w-full transition-all duration-500 hover:scale-105" })), isLoading && !isSuccess && (_jsx("div", { className: "object-contains flex h-[600px] w-full transition-all duration-500 hover:scale-105", children: _jsx(FaCircleNotch, { className: "animate-spin h-10 w-full mr-3 flex self-center", size: 40, color: "#50b5ff" }) }))] }), _jsx("div", { className: "mt-10 pb-6 text-lg font-semibold", children: "About This Gig" }), _jsx("div", { className: "pb-6", children: _jsx(HtmlParser, { input: gig.current.description ?? '' }) }), _jsx("hr", { className: "border-grey my-3" }), _jsxs("div", { className: "grid grid-cols-1 gap-y-4 lg:grid-cols-2", children: [_jsxs("div", { className: "flex flex-col", children: [_jsx("span", { className: "text-[#95979d]", children: "Main Categories" }), _jsx("span", { className: "font-normal", children: gig.current.categories })] }), _jsxs("div", { className: "flex flex-col", children: [_jsx("span", { className: "text-[#95979d]", children: "Sub Categories" }), _jsx("div", { className: "flex flex-col", children: gig.current.subCategories &&
                                                                        gig.current.subCategories.map((category, index) => (_jsx("span", { className: "font-normal", children: `${category}${index !== gig.current.subCategories.length - 1 ? ',' : ''}` }, uuidv4()))) })] })] }), _jsx("hr", { className: "border-grey my-3" })] }), _jsx("div", { className: "w-full p-4 lg:w-1/3", children: _jsx(StickyBox, { children: _jsxs("div", { className: "border-grey mb-8 border", children: [_jsx("div", { className: "flex border-b px-4 py-2", children: _jsxs("h4", { className: "font-bold", children: ["$", gig.current.price] }) }), _jsxs("ul", { className: "mb-0 list-none px-4 py-2", children: [_jsx("li", { className: "flex justify-between", children: _jsx("div", { className: "ml-15 flex w-full pb-3", children: _jsx("div", { className: "text-base font-bold", children: gig.current.basicTitle }) }) }), _jsx("li", { className: "flex justify-between", children: _jsx("div", { className: "ml-15 flex w-full pb-4", children: _jsx("div", { className: "text-sm font-normal", children: gig.current.basicDescription }) }) }), _jsx("li", { className: "flex justify-between", children: _jsxs("div", { className: "ml-15 flex w-full pb-3", children: [_jsx(FaRegClock, { className: "flex self-center" }), ' ', _jsx("span", { className: "ml-3 text-sm font-semibold", children: gig.current.expectedDelivery })] }) }), _jsx("li", { className: "flex justify-between", children: _jsx("div", { className: "ml-15 flex w-full py-1", children: _jsx(Button, { className: 'text-md flex w-full cursor-pointer justify-between rounded bg-sky-500 px-8 py-2 font-bold text-white focus:outline-none ', onClick: () => setShowRegisterModal(true), label: _jsxs(_Fragment, { children: [_jsx("span", { className: "w-full", children: "Continue" }), " ", _jsx(FaArrowRight, { className: "flex self-center" })] }) }) }) })] })] }) }) })] })] }) }))] })] }));
};
export default GigInfoDisplay;
