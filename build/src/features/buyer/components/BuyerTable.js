import { jsxs as _jsxs, jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
import { Link } from 'react-router-dom';
import { TimeAgo } from 'src/shared/utils/timeago.util';
import { lowerCase } from 'src/shared/utils/util.service';
import { v4 as uuidv4 } from 'uuid';
const BuyerTable = ({ type, orders, orderTypes }) => {
    return (_jsxs("div", { className: "flex flex-col", children: [_jsx("div", { className: "border-grey border border-b-0 px-3 py-3", children: _jsxs("div", { className: "text-xs font-bold uppercase sm:text-sm md:text-base", children: [type, " orders "] }) }), _jsx("table", { className: "border-grey flex-no-wrap flex w-full table-auto flex-row overflow-hidden border text-sm text-gray-500 sm:inline-table", children: orderTypes > 0 ? (_jsxs(_Fragment, { children: [_jsx("thead", { className: "border-grey border-b text-xs uppercase text-gray-700 sm:[&>*:not(:first-child)]:hidden", children: orders.map(() => (_jsxs("tr", { className: "mb-1 flex flex-col flex-nowrap bg-sky-500 text-white sm:mb-0 sm:table-row md:table-row lg:bg-transparent lg:text-black", children: [_jsx("th", { className: "p-3 text-center md:w-[6%]", children: _jsx("span", { className: "block lg:hidden", children: "Image" }) }), _jsx("th", { className: "p-3 text-center md:w-[40%]", children: _jsx("span", { className: "block lg:hidden", children: "Title" }) }), _jsx("th", { className: "p-3 text-center", children: "Order Date" }), _jsx("th", { className: "p-3 text-center", children: type === 'cancelled' ? 'Cancelled On' : 'Due On' }), _jsx("th", { className: "p-3 text-center", children: "Total" }), _jsx("th", { className: "p-3 text-center", children: "Status" })] }, uuidv4()))) }), _jsx("tbody", { className: "flex-1 sm:flex-none", children: orders.map((order) => (_jsxs("tr", { className: "border-grey mb-2 flex flex-col flex-nowrap border-b bg-white sm:mb-0 sm:table-row ", children: [_jsx("td", { className: "px-3 py-3 lg:flex lg:justify-center", children: _jsx("img", { className: "h-6 w-10 object-cover lg:h-8 lg:w-11", src: order.gigCoverImage, alt: "Gig cover image" }) }), _jsx("td", { className: "p-3 text-left", children: _jsx("div", { className: "grid", children: _jsx(Link, { to: `/orders/${order.orderId}/activities`, className: "truncate text-sm font-normal hover:text-sky-500", children: order.gigBasicTitle }) }) }), _jsx("td", { className: "p-3 text-left lg:text-center", children: TimeAgo.dayMonthYear(`${order.dateOrdered}`) }), _jsx("td", { className: "p-3 text-left lg:text-center", children: type === 'cancelled'
                                            ? TimeAgo.dayMonthYear(`${order.approvedAt}`)
                                            : TimeAgo.dayMonthYear(`${order.offer.newDeliveryDate}`) }), _jsxs("td", { className: "p-3 text-left lg:text-center", children: ["$", order.price] }), _jsx("td", { className: "px-3 py-1 text-left lg:p-3 lg:text-center", children: _jsx("span", { className: `status rounded bg-transparent p-0 text-xs font-bold uppercase text-black sm:px-[5px] sm:py-[4px] sm:text-white ${lowerCase(order.status.replace(/ /g, ''))}`, children: order.status }) })] }, uuidv4()))) })] })) : (_jsx("tbody", { children: _jsx("tr", { children: _jsxs("td", { className: "w-full px-4 py-2 text-sm", children: ["No ", type, " orders to show."] }) }) })) })] }));
};
export default BuyerTable;
